'JUMPKUN2 BY TAKUYA MATSUBARA

DEBUG=0 'DEBUG
DEMO=0  '0=PLAY / 1=REPLAY / 2=RANDOM REPLAY

GOSUB @INIT

WHILE 1
 GOSUB @TITLE
 IF MENU==0 THEN
  GOSUB @MAIN
  GOSUB @GOVER
 ENDIF
 IF MENU==1 THEN GOSUB @EDIT
 IF MENU==2 THEN GOSUB @REPLAY
 IF MENU==3 THEN GOSUB @REPLAY2
 IF MENU==4 THEN
  GCLS
  SPCLR
  IF INPUTYN()!=ASC("N") THEN BREAK
 ENDIF
WEND
END
'---
@INIT
ACLS

CURRENT$=CHDIR()
IF RIGHT$(CURRENT$,1)!="/" THEN CURRENT$=CURRENT$+"/"
MAPW=256

DIM NAME$[0]
DIM NAME2$[0]
DIM KEYBUF%[0]
DIM MAPLIST$[64]
DIM SAVEDAT[0]       'SAVE DATA
DIM SAVEMAP$[0]
DIM VX1[6],VY1[6]     'VECTOL
VX1[0]=0:VY1[0]=-1
VX1[1]=1:VY1[1]=0
VX1[2]=0:VY1[2]=1
VX1[3]=-1:VY1[3]=0

VX1[4]=-1:VY1[4]=1
VX1[5]= 1:VY1[5]=1

'GRADATION
DN=0
GPAGE 3,3
SPDEF DN OUT U,V,W,H,OX,OY,A
FOR I=0 TO 15
 R=0
 G=0
 B=128-(128*I/15)
 GLINE U,V+I,U+15,V+I,RGB(R,G,B)
NEXT
GPAGE 0,0

MAPFILE$=""   'MAP FILENAME
AUTHOR$=""
MAPFILEBAK$=""   'MAP FILENAME
PATH1$="/TEMP"
PATH2$="/JUMPACTION"
PATH$=PATH1$+PATH2$+"/"

SAVEFILE$=PATH$+"SAVEDATA.TXT" 'SAVEDATA

IF CHKFILE(PATH1$)==0        THEN MKDIR PATH1$
IF CHKFILE(PATH1$+PATH2$)==0 THEN MKDIR PATH1$+PATH2$

NA$="SAMPLE_REPLAY.DAT"
NB$=PATH$+NA$
IF CHKFILE(NA$)!=0 AND CHKFILE(NB$)==0 THEN
 FCOPY NA$,NB$
ENDIF

FOR I=0 TO 15
 NA$="STAGE"+FORMAT$("%03D",I+1)+".BIN"
 NB$=PATH$+NA$
 IF CHKFILE(NA$)==0 THEN CONTINUE
 IF CHKFILE(NB$)!=0 THEN CONTINUE
 PRINT "COPY MAP DATA:";NA$
 FCOPY NA$,NB$
NEXT

WHILE LEN(MAPLIST$)
 R$=POP(MAPLIST$)
WEND

FILES PATH$,NAME$
FOR I=0 TO LEN(NAME$)-1
 T$=UCASE(NAME$[I])
 IF LEFT$(T$,1)==" " THEN T$=SUBST$(T$,0,1,"")
 IF LEFT$(T$,1)=="@" THEN CONTINUE
 IF LEFT$(T$,1)=="+" THEN CONTINUE
 IF RIGHT$(T$,4)!=".BIN" THEN CONTINUE
 IF LEFT$(T$,5)!="STAGE" THEN CONTINUE
 T$=LEFT$(T$,LEN(T$)-4)
 PUSH MAPLIST$,T$
NEXT
SORT MAPLIST$

IF CHKFILE(SAVEFILE$)==0 THEN
 T$=""
 T$=T$+"STAGE001:999.99"+CHR$(10)
 T$=T$+"STAGE002:999.99"+CHR$(10)
 SAVE "TXT:"+SAVEFILE$,T$
 WAIT 120
ENDIF

LOAD "TXT:"+SAVEFILE$ OUT T$
PTR=0
WHILE PTR<LEN(T$)
 PTR2=INSTR(PTR,T$,CHR$(10))
 IF PTR2<0 THEN BREAK
 A$=MID$(T$,PTR,PTR2-PTR)
 PTR=PTR2+1
 I=INSTR(A$,":")
 PUSH SAVEMAP$,LEFT$(A$,I)
 PUSH SAVEDAT,VAL(MID$(A$,I+1,100))
WEND

NW=400 'SCREEN WIDTH
NH=240 'SCREEN HEIGHT
BGW=FLOOR(NW/16) 'BG WIDTH
BGH=FLOOR(NH/16) 'BG HEIGHT
DIM MAP%[MAPW,BGH]   'MAP DATA
DIM BUF%[MAPW*BGH*2] '

'KEYCODE
RIGHT = 28
LEFT  = 29
UP    = 30
DOWN  = 31
ENTER = 13
SPACE = 32
ESCAPE= &H1B

STICKID = 0
STICKLV = 0.5 'THRESHOLD

'SPRITE NUMBER
SKY   =221
SPLOGO=220
SPSTAR=200
STARS =15

STAGE=0
MENU=0

BGN=1  'GRP NUMBER
A$="/IMAGE/SMILEBOOM/DEFBG.PNG"
PRINT "LOADING ";A$
IF CHKFILE(A$)==0 THEN
 PRINT "ERROR:FILE NOT FOUND ";A$
 END
ENDIF
LOAD "GRP"+STR$(BGN)+":"+A$

DIM WALL%[MAPW,BGH]
DIM SPTBL[0]  'SPCHR
DIM HPMAX[0]  'HIT POINT
DIM FLAG[0]   'EMEMY FLAG
DIM ANICNT[0] 'ANIME COUNT
DIM SCALE[0]  'SCALE
DIM SPNUMBUF[0]

RESTORE @CHRTABLE

FOR I=0 TO 99
 READ C
 IF C<0 THEN BREAK
 READ D
 READ S
 READ H
 READ E
 PUSH SPTBL,C
 PUSH ANICNT,D
 PUSH SCALE,S
 PUSH HPMAX,H
 PUSH FLAG,E
NEXT

@CHRTABLE
'   SPDEF,ANIME,SCALE,HP, FLAG
DATA 2548,    4,    1, 1, &B1000 ' 0 A PLAYER
DATA 2968,    4,    1, 1, &B1001 ' 1 B INOSHISHI
DATA 2988,    4,    1, 1, &B1001 ' 2 C ROBOT
DATA 3028,    4,    1, 1, &B1001 ' 3 D MUMMY
DATA 2314,    1,    1, 1, &B0001 ' 4 E STONE
DATA 3473,    1,    1, 1, &B0001 ' 5 F TANK HEAD
DATA 2724,    1,    1, 1, &B0001 ' 6 G BLACK KNIGHT
DATA 3258,    4,    1, 1, &B0001 ' 7 H SPIN
DATA 3261,    1,    1, 1, &B0001 ' 8 I DRAM
DATA 3264,    1,    1, 1, &B0001 ' 9 J FLY
DATA 3517,    1,    1, 1, &B0000 '10 K SLIDE
DATA 3299,    1,    1, 1, &B0001 '11 L FIGHTER1
DATA 3323,    1,    1, 1, &B0001 '12 M FIGHTER2
DATA 3311,    1,    1, 1, &B0001 '13 N FIGHTER3
DATA 3265,    1,    1, 6, &B0001 '14 O MOLE
DATA 3465,    1,    2, 6, &B0001 '15 P BOSS1
DATA 3466,    1,    2, 6, &B0001 '16 Q BOSS2
DATA 3495,    1,    1, 6, &B0001 '17 R EBI
DATA 3512,    1,    1, 6, &B0101 '18 S KANI
DATA 3254,    1,    1, 1, &B0001 '19 T CROW
DATA 3243,    1,    1, 1, &B0001 '20 U GUNPOD1
DATA 3247,    1,    1, 1, &B0001 '21 V GUNPOD2
DATA 3507,    1,    1, 1, &B0001 '22 W BASE
DATA 3044,    1,    1, 1, &B0001 '23 X SKELTON
DATA 3064,    1,    1, 1, &B0001 '24 Y GHOST
DATA 3296,    1,    1, 1, &B0001 '25 Z TOGE
DATA 3271,    3,    1, 1, &B0000 '26 CAN
DATA 3275,    3,    1, 1, &B0000 '27 POWER
DATA 3513,    1,    1, 1, &B0001 '28 FOOT1
DATA 3514,    1,    1, 1, &B0001 '29 FOOT2
DATA 3366,    3,    1,99, &B0011 '30 THUNDER
DATA 3352,    1,    1, 1, &B0001 '31 MISSILE
DATA 3357,    1,    1, 1, &B0011 '32 LAZER
DATA 3358,    2,    1,99, &B0011 '33 BEAM1
DATA 3390,    1,    1,99, &B0011 '34 BEAM2
DATA 3391,    1,    1,99, &B0011 '35 BEAM3
DATA 3372,    4,    1,99, &B0011 '36 BEAM4
DATA 3279,    1,    1, 1, &B0000 '37 JUNK
DATA 3393,    1,    1, 1, &B0011 '38 WAVE LAZER
DATA 3395,    1,    1, 1, &B0011 '39 FIRE BALL
DATA 3408,    3,    1, 1, &B0000 '40 SPARK
DATA 3412,    4,    1, 1, &B0000 '41 RAY BALL
DATA 3424,    3, 0.75, 1, &B0000 '42 SMOKE
DATA 3428,    4,    1, 1, &B0000 '43 EXPLOSION
DATA 2292,    2,    1, 1, &B0001 '44 BOMB
DATA    0,    1,    1, 0, &B0000 '45
DATA    0,    1,    1, 0, &B0000 '46
DATA    0,    1,    1, 0, &B0000 '47
DATA 3390,    1,    1, 1, &B0000 '48 MY BEAM
DATA 2516,    2,    1, 1, &B0000 '49 
DATA -1
RETURN

'FLAG
'BIT1=UNBREAK
'BIT0=ENEMY
'BIT2=USE BUF
'BIT3=ANIME X1

'---
@PUTLIST
WHILE 1
 READ A$
 IF A$=="" THEN BREAK
 S=1
 PUTSTR2 X,Y,A$,S
 INC Y,24
WEND
RETURN

@STRLIST1
DATA "PLAY"
DATA "MAP EDIT"
DATA "REPLAY"
DATA "REPLAY(RANDOM)"
DATA "EXIT"
DATA ""

@STRLIST2
DATA "BEST TIME"
DATA "INITIALIZE TIME"
DATA "RETURN TO MENU"
DATA ""

'---
@REPLAY
A$=FILESELECT(0,".DAT")
IF A$=="" THEN RETURN
DEMO=1
GOSUB @MAIN
GOSUB @GOVER
DEMO=0
RETURN

'---
@REPLAY2
DIM DATLIST$[0]

WHILE LEN(DATLIST$)
 R$=POP(DATLIST$)
WEND
WHILE 1
 FILES PATH$,NAME$
 FOR I=0 TO LEN(NAME$)-1
  T$=UCASE(NAME$[I])
  IF LEFT$(T$,1)==" " THEN T$=SUBST$(T$,0,1,"")
  IF LEFT$(T$,1)=="@" THEN CONTINUE
  IF LEFT$(T$,1)=="+" THEN CONTINUE
  IF RIGHT$(T$,4)!=".DAT" THEN CONTINUE
  PUSH DATLIST$,T$
 NEXT

 FOR I=1 TO LEN(DATLIST$)*2
  N1=RND(LEN(DATLIST$))
  N2=RND(LEN(DATLIST$))
  IF N1==N2 THEN CONTINUE
  SWAP DATLIST$[N1],DATLIST$[N2]
 NEXT

' FOR I=0 TO LEN(DATLIST$)-1
'  PRINT DATLIST$[I]
' NEXT

 DEMO=2
 WHILE 1
  IF LEN(DATLIST$)==0 THEN BREAK
  A$=PATH$+POP(DATLIST$)
  GOSUB @MAIN
  IF GOALFLAG<0 THEN BREAK
  GOSUB @GOVER
  WAIT 60
 WEND
 DEMO=0
 IF GOALFLAG<0 THEN BREAK
WEND

RETURN

'---
@TITLE
RANDOMIZE 0
XSCREEN NW,NH,NW/NH
GPRIO 512
GOFS 0,0
GCLS
PUTSTR 0,0,"GAMEPADせんようゲ-ム",#YELLOW

'MAIN MENU
X=200-64
Y=100
RESTORE @STRLIST1
GOSUB @PUTLIST

'PLAYER
N=0
DN=2544
X=NW*3/4
Y=160
SPSET N,DN
SPOFS N,X,Y,1000
SPSCALE N,4,4
SPANIM N,"I",8,DN,8,DN+1,8,DN+2,8,DN+3,0
SPANIM N,"XY",120,X,Y,-30,X,Y-100,-30,X,Y,0

'SKY
DN=0
X=0
Y=0
SPSET SKY,DN
SPOFS SKY,X,Y,1024
SPSCALE SKY,400/16,240/16

'SMILEBASIC LOGO
DN=4095
X=340
Y=8
Z=0
SPSET SPLOGO,DN
SPOFS SPLOGO,X,Y,Z

'TITLE LOGO
A$="JUMPKUN2"
S=3
X=(NW/2)-((LEN(A$)-1)*16*S/2)
Y=NH/3
FOR I=0 TO LEN(A$)-1
 DN=ASC(MID$(A$,I,1))+2048
 SPSET DN OUT N
 SPOFS N,X,Y,0
 SPSCALE N,S,S
 SPANIM N,"XY",180,X,Y,-8,X,Y-45,-8,X,Y,0
 VSYNC 5
 INC X,(16*S)
NEXT

PUTSTR -1,NH-8-12,"HOW TO PLAY",#LIME
A$="["+CHR$(57885)+"]["+CHR$(57884)+"]:MOVE  [BUTTON1]:JUMP"
PUTSTR -1,NH-8,A$,#LIME

SWOFFWAIT

'CURSOR
N=100
DN=2339
SPSET N,DN
WHILE 1
 X=120
 Y=100+8+(MENU*24)
 SPANIM N,"XY",30,X,Y,30,X+2,Y,0
 SWOFFWAIT
 BT=KEYWAIT()
 IF BT==ENTER THEN BREAK
 IF BT==SPACE THEN BREAK
 IF BT==UP   THEN DEC MENU
 IF BT==DOWN THEN INC MENU
 MENU=FIXNUM(MENU,0,4)
WEND
CLS
RETURN
'---
@STAGESELECT   'STAGE SELECT

XSCREEN NW,NH,NW/NH
GCLS #NAVY
SPCLR

IDX=0
IDXOFS=0
FOR I=0 TO LEN(MAPLIST$)-1
 X=200-128
 Y=I-IDXOFS
 IF Y<0 OR Y>7 THEN CONTINUE
 Y=32+(Y*24)
 S=1
 PUTSTR2 X,Y,MAPLIST$[I],S
NEXT

'BEST TIME
FOR I=0 TO LEN(MAPLIST$)-1
 Y=I-IDXOFS
 IF Y<0 OR Y>7 THEN CONTINUE
 X=36
 Y=4+(Y*3)
 TIME=GET_SAVEDAT(MAPLIST$[I])
 IF TIME>=999 THEN COLOR #GRAY ELSE COLOR #WHITE
 LOCATE X,Y
 PRINT "BEST TIME"
 LOCATE X,Y+1
 PRINT FORMAT$("%6.2F",TIME)+" SEC"
NEXT

'CURSOR
N=100
DN=2339
SPSET N,DN
WHILE 1
 X=200-120-16
 Y=32+8+(STAGE*24)
 SPANIM N,"XY",30,X,Y,30,X+2,Y,0
 SWOFFWAIT
 BT=KEYWAIT()
 IF BT==UP   THEN DEC STAGE
 IF BT==DOWN THEN INC STAGE
 STAGE=FIXNUM(STAGE,0,LEN(MAPLIST$)-1)
 IF BT==ESCAPE THEN BREAK
 IF BT==ENTER THEN BREAK
 IF BT==SPACE THEN BREAK
WEND
MAPFILE$=MAPLIST$[STAGE]
CLS
GCLS
SPCLR

RETURN
'---
@MAIN
XSCREEN NW,NH,NW/NH
GCLS
SPCLR

IF DEMO>=1 THEN 'REPLAY
 IF CHKFILE(A$)==0 THEN
  PRINT "ERROR:FILE NOT FOUND ";A$
  RET=HITANY()
  RETURN
 ENDIF
 LOAD "DAT:"+A$,KEYBUF%
 HEADER$=""
 FOR I=1 TO 16
  HEADER$=HEADER$+CHR$(SHIFT(KEYBUF%))
 NEXT
 IF INSTR(HEADER$,"JUMPKUN2")<0 THEN
  PRINT "ERROR:WRONG HEADER"
  RET=HITANY()
  RETURN
 ENDIF

 AUTHOR$=""
 FOR I=1 TO 16
  CH=SHIFT(KEYBUF%)
  IF CH<32 THEN BREAK
  AUTHOR$=AUTHOR$+CHR$(CH)
 NEXT
 WHILE RIGHT$(AUTHOR$,1)==" "
  AUTHOR$= LEFT$(AUTHOR$,LEN(AUTHOR$)-1)
 WEND

 MAPFILE$=""
 FOR I=1 TO 16
  CH=SHIFT(KEYBUF%)
  IF CH<32 THEN BREAK
  MAPFILE$=MAPFILE$+CHR$(CH)
 NEXT
 WHILE RIGHT$(MAPFILE$,1)==" "
  MAPFILE$= LEFT$(MAPFILE$,LEN(MAPFILE$)-1)
 WEND

 NOWTIME$=""
 FOR I=1 TO 15
  CH=SHIFT(KEYBUF%)
  IF CH<32 THEN BREAK
  NOWTIME$=NOWTIME$+CHR$(CH)
 NEXT
 SEED=SHIFT(KEYBUF%)

 COLOR #WHITE,0
 LOCATE 0,29
 PRINT HEADER$
 PRINT AUTHOR$
 PRINT MAPFILE$
 PRINT MID$(NOWTIME$,0,2);"/";
 PRINT MID$(NOWTIME$,2,2);"/";
 PRINT MID$(NOWTIME$,4,2);" ";
 PRINT MID$(NOWTIME$,6,2);":";
 PRINT MID$(NOWTIME$,8,2);":";
 PRINT MID$(NOWTIME$,10,2);""
 PRINTSUB -1,15,"REPLAY"
ELSE
 GOSUB @STAGESELECT
 IF BT==ESCAPE THEN
  GOALFLAG=-1 'EXIT
  RETURN
 ENDIF

 WHILE LEN(KEYBUF%)>0  'CLEAR KEY BUFFER
  RET=SHIFT(KEYBUF%)
 WEND
 NOWTIME$=GETDATEFILE()
 SEED=RND(&H3FFF)
ENDIF
LOADMAP MAPFILE$

'SKY
DN=0
X=0
Y=0
Z=1024
SPSET SKY,DN
SPOFS SKY,X,Y,Z
SPSCALE SKY,400/16,240/16

RANDOMIZE 0,SEED 'ID,SEED

NW2=NW+16

AX=0 'BG OFFSET
FX=0 'GRAPHIC OFFSET
RX=0

'SKY
DN=0
X=0
Y=0
SPSET SKY,DN
SPOFS SKY,X,Y,1024
SPSCALE SKY,400/16,240/16

'STAR
FOR I=0 TO STARS-1
 N=SPSTAR+I
 SPSET N,3401
 X=RND(400)
 Y=RND(200)
 Z=1023
 SPOFS N,X,Y,Z
 S=3-FLOOR(I*3/STARS)
 SPSCALE N,S,S
 SPCOLOR N,RGB(64,255,255,255)
 SPROT N,RND(4)*90
NEXT

'WALL BUFF
FOR X=0 TO MAPW-1
 FOR Y=0 TO BGH-1
  N=MAP%[X,Y]
  IF ALPHABET(N)==TRUE THEN N=0
  WALL%[X,Y]=N AND 1023
 NEXT
NEXT

'FIRST BG
FOR X=0 TO FLOOR(NW/16)-1
 FOR Y=0 TO FLOOR(NH/16)-1
  N=MAP%[X,Y]
  IF ALPHABET(N)==TRUE THEN
   NEWID=N-&H41
   SPMAKE X*16+8,Y*16+15,0,NEWID
   N=0 'SPACE
  ENDIF
  BGPUT X,Y,N
  BGPUT X+(NW2/16),Y,N
 NEXT
NEXT

'SMILEBASIC LOGO
DN=4095
X=340
Y=8
Z=0
SPSET SPLOGO,DN
SPOFS SPLOGO,X,Y,Z
COLOR #WHITE,0

'SCORE=0
GOALFLAG=0
ENDCNT=0
SPEED=0
TIME=0

'MAIN LOOP
WHILE ENDCNT<60
 COLOR #WHITE,#MAROON
' LOCATE 20,0:PRINT "SCORE:";SCORE
 LOCATE 0,0:PRINT "TIME:";FORMAT$("%5.2F",TIME)
 TIME=TIME+(1/60)
 COLOR #WHITE,0
 'CHARACTER CONTROL
 FOR I=0 TO 99
  IF SPUSED(I)==FALSE THEN CONTINUE
  SPOFS I OUT X,Y
  ID =SPVAR(I,0)
  IF ID==-1 THEN CONTINUE
  CNT=SPVAR(I,1)
  TMP=SPVAR(I,2)
  HP =SPVAR(I,3)
  X1 =SPVAR(I,4)
  G  =SPVAR(I,5)
  D  =SPROT(I)
  GOSUB "@SUB"+STR$(ID)

  IF HP<=0 THEN 'DEAD
   SPCLR I
   SPMAKE X,Y,D,43 'EXPLOSION
   X=999
  ENDIF
  IF X<-128 OR X>(400+128) OR Y<-128 OR Y>NH+128 THEN 'がめんがい
   IF FLAG[ID] AND &B00000100 THEN
    WHILE(LEN(SPNUMBUF))
     SPCLR POP(SPNUMBUF)
    WEND
   ENDIF
   SPCLR I
   CONTINUE
  ENDIF

  'ANIME
  IF ANICNT[ID]>=2 AND (CNT MOD 6)==0 THEN
   C=SPTBL[ID]
   IF FLAG[ID] AND &B00001000 THEN C=C-(4*SGN(X1))
   C=C+(FLOOR(MAINCNT/6) MOD ANICNT[ID])
   SPCHR I,C
  ENDIF
  SPOFS I,X,Y
  SPROT I,D
  SPVAR I,1,CNT+1
  SPVAR I,2,TMP
  SPVAR I,3,HP
  SPVAR I,4,X1
  SPVAR I,5,G
 NEXT
 GOSUB @JIMEN
 IF ENDCNT THEN INC ENDCNT
 VSYNC 1
WEND
RETURN

'--- GAME OVER/STAGE CLEAR
@GOVER
IF GOALFLAG==-1 THEN RETURN

COLOR #WHITE,0
LOCATE 0,0:PRINT " "*50;
COLOR #WHITE,#BLACK
IF GOALFLAG==1 THEN
 PRINTSUB -1,4,"     TIME:"+FORMAT$("%6.2F",TIME)+" SEC"
 PRINTSUB -1,5,"BEST TIME:"+FORMAT$("%6.2F",GET_SAVEDAT(MAPFILE$))+" SEC"
 IF GET_SAVEDAT(MAPFILE$)>TIME THEN
  IF DEMO==0 THEN
   PRINTSUB -1,7,"NEW RECORD!!"
   SET_SAVEDAT MAPFILE$,TIME
   T$=""
   FOR I=0 TO LEN(SAVEDAT)-1
    T$=T$+ SAVEMAP$[I]+":"
    T$=T$+ FORMAT$("%6.2F", SAVEDAT[I])+CHR$(10)
   NEXT
   SAVE "TXT:"+SAVEFILE$,T$
  ENDIF
 ENDIF

 A$="STAGE CLEAR"
 S=2
ELSE
 A$="GAME OVER"
 S=2.5
ENDIF

'PRINTSUB -1,18,"SCORE:"+STR$(SCORE)
'IF HISCORE<SCORE THEN HISCORE=SCORE
'LOCATE 20,6:PRINT "HISCORE:";HISCORE
COLOR #WHITE,0

X=(NW/2)-((LEN(A$)-1)*16*S/2)
Y=NH/2
FOR I=0 TO LEN(A$)-1
 DN=ASC(MID$(A$,I,1))+2048
 SPSET DN OUT N
 SPOFS N,X,Y,0
 SPANIM N,"S",1,S,0.1,-15,S,S,1
 VSYNC 3
 X=X+(16*S)
NEXT

COLOR #YELLOW,#BLACK
A$="RATE:"+STR$(FLOOR(100*RX/((MAPW*16)-400)))+"%"
PRINTSUB -1,17,A$
'PUTSTR2 -1,17*8,A$,1

SWOFFWAIT

IF DEMO==2 THEN RETURN

COLOR #BLACK,#WHITE
PRINTSUB -1,-1," HIT ANY KEY "
COLOR #WHITE,0

IF DEMO==1 THEN
 BT=KEYWAIT()
 RETURN
ENDIF

COLOR #BLACK,#WHITE
PRINTSUB -1,27," [S]:SAVE REPLAY DATA "
COLOR #WHITE,0
BT=KEYWAIT()
IF BT==ASC("S") THEN GOSUB @SAVEREPLAY
RETURN
'----
@SAVEREPLAY
IF DEMO>=1 THEN RETURN
IF LEN(KEYBUF%)<=0 THEN
 PRINT "NODATA"
 WAIT 60
 RETURN
ENDIF
CLS
COLOR #WHITE,#MAROON
LOCATE 0,24
A$=PATH$+NOWTIME$+".DAT"
PRINT "SAVE '";A$;"'"
PRINT "REPLAY DATA ";LEN(KEYBUF%);" SAMPLES"

IF INPUTYN()==ASC("N") THEN RETURN

COLOR #WHITE,#NAVY
AUTHOR$=""
INPUT "INPUT YOUR NAME(MAX 16CHR)";AUTHOR$

'ADD HEADER
T$=""
T$=T$+LEFT$("JUMPKUN2/V1.0"+" "*16,16)
T$=T$+LEFT$(AUTHOR$+" "*16,16)
T$=T$+LEFT$(MAPFILE$+" "*16,16)
T$=T$+LEFT$(NOWTIME$+" "*15,15)
UNSHIFT KEYBUF%,SEED 'RANDOMIZE SEED
FOR I=LEN(T$)-1 TO 0 STEP -1
 UNSHIFT KEYBUF%,ASC(MID$(T$,I,1))
NEXT

PRINT "SAVE '";A$;"'"
COLOR #WHITE,0
SAVE "DAT:"+A$,KEYBUF%
WAIT 180

RETURN
'---
DEF GETDATEFILE()
T$=DATE$+TIME$
T2$=MID$(T$,2,2)+MID$(T$,5,2)+MID$(T$,8,2)
T2$=T2$+MID$(T$,10,2)+MID$(T$,13,2)+MID$(T$,16,2)
RETURN T2$
END

'---
DEF SWOFFWAIT
WHILE 1
 STICK STICKID OUT SX,SY
 IF ABS(SX)<STICKLV AND ABS(SY)<STICKLV THEN
  IF BUTTON()==0 THEN BREAK
 ENDIF
 VSYNC
WEND
END

'---
'X,Y,かくど,ID

DEF SPMAKE X,Y,D,NEWID
SPSET 0,99,SPTBL[NEWID] OUT N
IF N==-1 THEN RETURN
Z=1
SPOFS N,X,Y,Z
SPROT N,D
SPCOL N,TRUE
SPSCALE N,SCALE[NEWID],SCALE[NEWID]
SPVAR N,0,NEWID 'ID
SPVAR N,1,0 'CNT
SPVAR N,2,0 'TMP
SPVAR N,3,HPMAX[NEWID] 'HP
SPVAR N,4,0 'X1
SPVAR N,5,0 'G
SPCOLOR N,RGB(255,255,255)
END

'---
@JIMEN
IF RX>=((MAPW*16)-400) THEN
 RX=((MAPW*16)-400)
 IF ENDCNT==0 THEN
'  SCORE = SCORE+(1000-FLOOR(TIME)*2) 'BONUS
  GOALFLAG=1
  ENDCNT=1
 ENDIF
 SPEED=0
ENDIF

IF SPEED==0 THEN RETURN

FOR I=0 TO STARS-1
 N=SPSTAR+I
 SPOFS N OUT X,Y
 X=X-(SPEED/((I/3)+2))
 Z=1023
 IF X<0 THEN X=400 ':Y=RND(200)
 SPOFS N,X,Y,Z
NEXT

RX=RX+SPEED

FOR I=1 TO SPEED
 IF (FX MOD 16)==0 THEN
  SCORE=SCORE+1

  X=((FX+NW) MOD NW2)/16
  FOR Y=0 TO FLOOR(NH/16)-1
   TX=AX+FLOOR(400/16)
   IF TX>=MAPW THEN BREAK
   N=MAP%[TX,Y]
   IF ALPHABET(N)==TRUE THEN
    NEWID=N-&H41
    SPMAKE 400+8,Y*16+15,0,NEWID
    N=0
   ENDIF
   BGPUT X,Y,N
   BGPUT X+(NW2/16),Y,N
  NEXT
  AX=AX+1
  IF AX>(MAPW-((400/16)-1)) THEN AX=(MAPW-((400/16)-1))
 ENDIF
 FX=(FX+1) MOD NW2
NEXT

'MOVE SPRITE
FOR I=0 TO 99
 IF SPUSED(I)==FALSE THEN CONTINUE
 SPOFS I OUT X,Y
 SPOFS I,X-SPEED,Y
NEXT
SPEED=0

GOFS FX,0

RETURN

'---
DEF BGHIT(X,Y)
X=FLOOR((X+RX)/16)
Y=FLOOR(Y/16)
IF X<0 OR Y<0 OR X>MAPW-1 OR Y>BGH-1 THEN RETURN FALSE
IF WALL%[X,Y] THEN RETURN TRUE
RETURN FALSE
END

'--- 0 A PLAYER
@SUB0

IF DEMO>=1 THEN
 IF CNT==5*60 THEN
  COLOR #WHITE,0
  LOCATE 0,25:PRINT " "*20
  LOCATE 0,26:PRINT " "*20
  LOCATE 0,27:PRINT " "*20
  LOCATE 0,28:PRINT " "*20
 ENDIF
 IF LEN(KEYBUF%)>0 THEN BT=SHIFT(KEYBUF%)

 K$=INKEY$()
 IF K$!="" OR BUTTON()!=0 THEN BT=(1<<11)
ELSE
 STICK STICKID OUT SX,SY
 BT=BUTTON()
 IF SX<-STICKLV THEN BT=BT OR (1<<2)
 IF SX>STICKLV  THEN BT=BT OR (1<<3)
 K$=INKEY$()
 IF K$!="" THEN
  C=ASC(K$)
  IF C==LEFT   THEN BT=BT OR (1<<2)
  IF C==RIGHT  THEN BT=BT OR (1<<3)
  IF C==ESCAPE THEN BT=BT OR (1<<11)
  IF C==SPACE  THEN BT=BT OR (1<<4)
 ENDIF
 IF LEN(KEYBUF%)<(60*60*3) THEN PUSH KEYBUF%,BT 'RECORDING
ENDIF
IF BT AND (1<<11) THEN 'EXIT
 GOALFLAG=-1
 ENDCNT=60
 RETURN
ENDIF
IF BT AND (1<<3) THEN X=X+2:X1=1
IF BT AND (1<<2) THEN X=X-2:X1=-1
Y=Y+G

WHILE 1
 FOR J=0 TO 3+2
  CH1=BGHIT(X+VX1[J]*7,Y-7+(VY1[J]*7))
  IF CH1!=0 THEN X=X-VX1[J]:Y=Y-VY1[J]:BREAK
 NEXT
 IF J>3+2 THEN BREAK
WEND

IF X<8   THEN X=8
IF X>200 THEN SPEED=X-200
IF Y<-16 THEN Y=-16
IF Y>NH  THEN
 ENDCNT=1
 X=999
 RETURN
ENDIF

'IF BT>0 AND (CNT MOD 16)==0 THEN
' SPMAKE X+8,Y,D,48 'MY BEAM
'ENDIF
IF TMP==1 AND G>=0 AND (BT AND (1<<4))==0 THEN
 TMP=0
ENDIF

CH1=BGHIT(X-6,Y+1)
CH2=BGHIT(X+6,Y+1)
IF CH1!=0 OR CH2!=0 THEN 'ON THE GROUND
 IF (BT AND (1<<4))!=0 AND TMP==0 THEN 'JUMP START
  G=-7
  BEEP 8
  TMP=1
 ELSE
  IF G>=0 THEN G=0
 ENDIF
ELSE 'IN THE AIR
 IF (BT AND (1<<4))!=0 THEN G=G+0.25 ELSE G=G+0.75 'GRAVITY
 IF G>7 THEN G=7 'TOO FAST
ENDIF

MX=X
MY=Y

IF DEBUG==1 THEN RETURN

'DETECT ENEMY
HIT=SPHITSP(I)
IF HIT>=0 THEN
 IF FLAG[SPVAR(HIT,0)] AND &B00000001 THEN 'ENEMY
  SPMAKE X,Y,D,49
  X=999
  ENDCNT=1
 ENDIF
ENDIF

RETURN

'--- 1 C INOSHISHI
@SUB1
IF ABS(X-MX)<100 THEN X1=-1

IF BGHIT(X,Y+1) THEN
 G=0
ELSE
 G=G+0.15
ENDIF
IF G>4 THEN G=4
IF BGHIT(X,Y) THEN Y=Y-1
IF BGHIT(X+TMP*8,Y) THEN
 G=-4
ELSE
 X=X+(X1*2.5)
ENDIF
Y=Y+G

RETURN

'--- 2 C ROBOT
@SUB2
IF CNT==0 THEN X1=-0.4
IF BGHIT(X,Y+1) THEN
 IF BGHIT(X+(X1*8),Y) THEN TMP=-TMP
 G=0
 X=X+X1
ELSE
 G=G+0.15
ENDIF
IF G>5 THEN G=5
Y=Y+G
IF BGHIT(X,Y) THEN Y=Y-1

IF (CNT MOD 50)==0 AND RND(3)==0 THEN
 D1=TRACKING(X-MX,Y-MY,0)
 SPMAKE X,Y-12,D1,33 'BEAM(RED)
ENDIF
RETURN

'--- 3 D MUMMY
@SUB3
IF BGHIT(X,Y+1) THEN
 G=0
ELSE
 G=G+0.15
ENDIF
IF G>5 THEN G=5
Y=Y+G
IF BGHIT(X,Y) THEN Y=Y-1

IF X>MX AND (CNT MOD 60)==0 AND RND(3)==0 THEN
 X1=-1
 SPMAKE X-8,Y-8,D,44 'BOMB
ENDIF
RETURN

'--- 4 E STONE
@SUB4
IF CNT==0 THEN
 X1=-1
 G=0
ENDIF
IF BGHIT(X+(X1*8),Y-8) THEN X1=-X1
IF BGHIT(X,Y-15) AND G<0 THEN G=-G
X=X+X1
G=G+0.15
IF G>6 THEN G=5
IF G>0 THEN
 IF BGHIT(X,Y) THEN
  G=-5
  SPMAKE X,Y,D,42 'SMOKE
 ENDIF
ENDIF
Y=Y+G

RETURN

'--- 5 F TANK HEAD
@SUB5
IF CNT==0 THEN D=-90
IF RND(3)==0 THEN
 D1=TRACKING(X-MX,Y-MY,D)
 D=D+SGN(D1)
ENDIF

IF (CNT MOD 45)==0 AND RND(2)==0 THEN
 ADDOFS X,Y,D,26 OUT TX,TY
 SPMAKE TX,TY,D,35 'BEAM(BIG)
ENDIF
RETURN

'--- 6 G CROW
@SUB6
IF (CNT MOD 70)==0 THEN
 SPMAKE X,Y,D,34 'BEAM(CYAN)
ENDIF
RETURN

'--- 7 H  SPIN
@SUB7
RETURN

'--- 8 I DRAM
@SUB8
CNT=CNT MOD 16
IF CNT==0 THEN
 Y=FLOOR(Y/16)*16+8

 ADDOFS X,Y,D,16 OUT TX,TY
 IF BGHIT(TX,TY)==TRUE THEN
  D=D-90
 ENDIF

 ADDOFS X,Y,D+90,16 OUT TX,TY
 IF BGHIT(TX,TY)==FALSE THEN
  D=D+90
 ENDIF
ENDIF

ADDOFS X,Y,D,1 OUT X,Y

RETURN

IF CNT==0 THEN
 Y=FLOOR(Y/16)*16+8
 TMP=16
ENDIF

IF TMP THEN
 ADDOFS X,Y,D,1 OUT X,Y
 DEC TMP
 RETURN
ENDIF

TMP=16
ADDOFS X,Y,D+90,16 OUT TX,TY
IF BGHIT(TX,TY)==FALSE THEN
 D=D+90
ENDIF

RETURN

'--- 9 J FLY
@SUB9
RETURN

'---10 K SLIDE
@SUB10
CNT2=CNT MOD 128
IF CNT2<64 THEN X=X-1 ELSE X=X+1
RETURN

'---11 L FIGHTER1
@SUB11
X=X-4
Y=Y+COS(RAD(CNT))
IF (CNT MOD 60)==0 THEN
 SPMAKE X,Y,D,35 'BEAM(BIG)
ENDIF
RETURN

'---12 M FIGHTER2
@SUB12
RETURN

'---13 N FIGHTER3
@SUB13
RETURN

'---14 O MOLE
@SUB14
RETURN

'---15 P BOSS1
@SUB15
IF CNT==0 THEN D=-90
IF CNT<60*2 AND X>(NW*3/4) THEN
 X=X-1
 RETURN
ENDIF
IF CNT>60*10 THEN
 X=X-2
 RETURN
ENDIF

IF (CNT MOD 60)==0 THEN G=G+RND(7)-3
IF BGHIT(X,Y+SGN(G)*32)==FALSE THEN Y=Y+G
G=G*0.95
IF (CNT MOD 45)==0 THEN
 IF TMP MOD 4<3 THEN
  SPMAKE X-16,Y-24,D,33 'BEAM1(RED)
  SPMAKE X-16,Y+24,D,33 'BEAM1(RED)
 ELSE
  D1=TRACKING(X-MX,Y-MY,0)
  SPMAKE X,Y,D1,34 'BEAM()
 ENDIF
 TMP=TMP+1
ENDIF

RETURN

'---16 Q BOSS2
@SUB16
RETURN

'---17 R EBI
@SUB17
RETURN

'---18 S KANI
@SUB18
IF CNT==0 THEN
 D=360-90
 FOR J=0 TO 7
  SPSET 300,511,3514 OUT N 'KANI LEG1
  SPLINK N,I
  SPVAR N,0,-1
  SPOFS N,-24+(48*(J MOD 2)),-16+(FLOOR(J/2)*16)
  PUSH SPNUMBUF,N
'  PRINT N 'DEBUG

  IF J MOD 2 ==0 THEN C=3510 ELSE C=3511
  SPSET 300,511,C OUT N 'KANI LEG2
  SPLINK N,SPNUMBUF[LEN(SPNUMBUF)-1]
  SPVAR N,0,-1
  SPOFS N,48,0
  SPROT N,-90
  PUSH SPNUMBUF,N
 NEXT
ENDIF

FOR J=0 TO 7
 D1=SIN(RAD(CNT*2+(J*(360/8))))*45+90
 IF J MOD 2 THEN D1=D1+180
 SPROT SPNUMBUF[J*2],D1
NEXT

IF CNT<60*1 AND X>(NW*3/4) THEN
 X=X-1
 RETURN
ENDIF
IF CNT>60*10 THEN
 X=X-2
 RETURN
ENDIF

IF (CNT MOD 60)==0 THEN G=G+RND(7)-3
IF BGHIT(X,Y+SGN(G)*80)==FALSE THEN Y=Y+G
G=G*0.95
IF (CNT MOD 45)==0 THEN
 J=RND(2)
 SPROT SPNUMBUF[J*2] OUT D1
 TX=X-24
 TY=Y+16-(J*32)
 ADDOFS TX,TY,D1+90,56 OUT TX,TY
 SPMAKE TX,TY,D,33 'BEAM1(RED)
ENDIF

RETURN

'---19 T CROW
@SUB19
RETURN

'---20 U GUNPOD1
@SUB20
IF CNT==0 THEN
 Y=FLOOR(Y/16)*16+8
 D=-90
ENDIF
'IF RND(3)==0 THEN
' D1=TRACKING(X-MX,Y-MY,D)
' D=D+SGN(D1)
'ENDIF
IF (CNT MOD 120)==0 THEN
 ADDOFS X,Y,D,16 OUT TX,TY
 SPMAKE X,Y,D,32 'LAZER
ENDIF

RETURN

'---21 V GUNPOD2
@SUB21
IF CNT==0 THEN D=-90
D=D+1
IF (CNT MOD 40)==0 THEN
 ADDOFS X,Y,D,8 OUT TX,TY
' SPMAKE TX,TY,D,33 'BEAM(RED)
 SPMAKE TX,TY,D,36 'BEAM(SMALL)
ENDIF
RETURN

'---22 W BASE
@SUB22
IF (CNT MOD 60)==0 AND RND(3)==0 THEN
 SPMAKE X,Y,D,31 'MISSILE
ENDIF
RETURN

'---23 X
@SUB23

'---24 Y
@SUB24

'---25 Z SPIKE
@SUB25
IF CNT==0 THEN
 TMP=0
ENDIF
IF TMP==0 THEN
 IF ABS(MX-X)<16 THEN TMP=1
ELSEIF TMP==1 THEN
 Y=Y+3
 IF BGHIT(X,Y+1) THEN
   SPMAKE X,Y,D,42 'SMOKE
  TMP=2
 ENDIF
ELSE
 Y=Y-1
 IF BGHIT(X,Y-16) THEN TMP=0
ENDIF
RETURN

'---26 CAN
@SUB26
RETURN

'---27 POWER
@SUB27
RETURN

'---28 FOOT1
@SUB28
RETURN

'---29 FOOT2
@SUB29
RETURN

'---30 THUNDER
@SUB30
RETURN

'---31 MISSILE
@SUB31
IF (CNT MOD 10)==0 THEN
 SPMAKE X,Y,D,42 'SMOKE
ENDIF
IF CNT<80 THEN
 D1=TRACKING(X-MX,Y-MY,D)
 D=D+SGN(D1)
ENDIF
S=(CNT/30)+2
IF S>8 THEN S=8
ADDOFS X,Y,D,S OUT X,Y
IF BGHIT(X,Y) THEN
 SPMAKE X,Y,D,42 'SMOKE
 X=999
ENDIF
RETURN

'---32 LAZER
@SUB32
IF CNT==0 THEN
 SPMAKE TX,TY,D,41 'RAY BALL
ENDIF
IF CNT<=60 THEN
 SPCOLOR I,RGB(32,255,255,255)
 RETURN
ELSE
 SPCOLOR I,RGB(255,255,255,255)
ENDIF

ADDOFS X,Y,D,5 OUT X,Y
RETURN

'---33 BEAM1(RED)
@SUB33
IF CNT==0 THEN
 SPMAKE X,Y,D,42 'SMOKE
ENDIF
IF CNT<15 THEN RETURN
ADDOFS X,Y,D,2.5 OUT X,Y
IF CNT>60*3 THEN X=999
IF BGHIT(X,Y) THEN
 SPMAKE X,Y,D,42 'SMOKE
 X=999
ENDIF
RETURN

'---34 BEAM2(CYAN)
@SUB34
IF CNT==0 THEN
 SPMAKE X,Y,D,42 'SMOKE
ENDIF
S=(CNT/20)
IF S>8 THEN S=8
ADDOFS X,Y,D,S OUT X,Y
IF BGHIT(X,Y) THEN
 SPMAKE X,Y,D,42 'SMOKE
 X=999
ENDIF
IF CNT>60*3 THEN X=999
RETURN

'---35 BEAM3(BIG)
@SUB35
IF CNT==0 THEN
 SPMAKE X,Y,D,42 'SMOKE
ENDIF
IF CNT<=20 THEN
 S=0
 SPCOLOR I,RGB((CNT*255/20),255,255,255)
 RETURN
ENDIF
S=4
ADDOFS X,Y,D,S OUT X,Y
IF BGHIT(X,Y) THEN
 SPMAKE X,Y,D,42 'SMOKE
 X=999
ENDIF
RETURN

'---36 BEAM4(SMALL BALL)
@SUB36
IF CNT==0 THEN
 SPMAKE X,Y,D,42 'SMOKE
ENDIF
ADDOFS X,Y,D,1.8 OUT X,Y
IF BGHIT(X,Y) THEN
 SPMAKE X,Y,D,42 'SMOKE
 X=999
ENDIF
IF CNT>30*6 THEN X=999
RETURN

'---37 JUNK
@SUB37
RETURN

'---38 WAVE LAZER
@SUB38
RETURN

'---39 FIRE BALL
@SUB39
ADDOFS X,Y,D,3 OUT X,Y
IF CNT>30 THEN X=999
IF BGHIT(X,Y) THEN
 SPMAKE X,Y,D,42 'SMOKE
 X=999
ENDIF
RETURN

'---40 SPARK
@SUB40
IF CNT>8 THEN X=999
RETURN

'---41 RAY BALL
@SUB41
IF CNT>=60 THEN X=999
RETURN

'---42 SMOKE
@SUB42
SPCOLOR I,RGB(255-(CNT*255/16),255,255,255)
IF CNT>=16 THEN X=999
RETURN

'---43 EXPLOSION
@SUB43
IF CNT==0 THEN BEEP 13
SPCOLOR I,RGB(255-(CNT*255/16),255,255,255)
IF CNT>=16 THEN X=999
RETURN

'---44 BOMB
@SUB44
IF (CNT MOD 30)==0 THEN
 SPMAKE X,Y,D,42 'SMOKE
ENDIF
IF CNT<30 THEN RETURN
IF CNT==30 THEN
 X1=SGN(MX-X)
 G=-6
ENDIF

IF BGHIT(X+(X1*8),Y-8) THEN X1=-X1
IF BGHIT(X,Y-15) AND G<0 THEN G=-G
X=X+X1
G=G+0.15
IF G>6 THEN G=6
IF G>0 THEN
 IF BGHIT(X,Y) THEN G=-6
ENDIF
Y=Y+G
IF CNT>60*3 THEN
 FOR J=0 TO 359 STEP 45
  SPMAKE X,Y,J,39 'FIRE BALL
 NEXT
 HP=-1
ENDIF
RETURN

'---48 MY BEAM
@SUB48
HIT=SPHITSP(I)
IF HIT>=0 THEN
 ID2=SPVAR(HIT,0)
 IF (FLAG[ID2] AND &B00000011)==1 THEN
  THP=SPVAR(HIT,3) - 1
  SPVAR HIT,3,THP
  IF THP>0 THEN SPMAKE X,Y,D,40 'SPARK
  X=999
 ENDIF
ENDIF

ADDOFS X,Y,D,8 OUT X,Y
RETURN

'---49 DEAD CHARACTER
@SUB49
IF CNT==0 THEN
 G=-1.2
 SPMAKE X,Y,D,43 'EXPLOSION
 BEEP 13
ENDIF
G=G+0.05
Y=Y+G
RETURN

'---
@EDIT
GOSUB @STAGESELECT
IF BT==ESCAPE THEN RETURN
LOADMAP MAPFILE$

SW=640
SH=360
XSCREEN SW,SH,SW/SH
GCLS
CLS
GFILL 0,0,SW-1,SH-1,#NAVY

WID=19 'さぎょうエリアサイズ
FOR I=0 TO 25
 SPDEF SPTBL[I] OUT U,V,W,H,OX,OY,A
 X=(40+((I MOD 13)*3))*8
 Y=(39+FLOOR(I/13)*3)*8
 IF W>24 THEN W=24
 IF H>24 THEN H=24
 GCOPY 3,U,V,U+W-1,V+H-1,X,Y,1
 GPUTCHR X+1,Y+1,CHR$(&H41+I),1,1,#BLACK
 GPUTCHR X  ,Y  ,CHR$(&H41+I),1,1,#WHITE
NEXT

MX=FLOOR(WID/2)
MY=FLOOR(WID/2)

SX2=0
SY2=0

MX1=1
MY1=0
SX1=0
SY1=0

MODE=0
AUTOMA=0

N1=0
N2=1
SPSET N1,0
SPSET N2,0

GOSUB @EDITMODE

WHILE 1
 VSYNC 1

 REPEAT
  RETRY=0
  IF MX<SX2 THEN SX2=SX2-1:RETRY=1
  IF MY<SY2 THEN SY2=SY2-1:RETRY=1
  IF MX>(SX2+WID-1) THEN SX2=SX2+1:RETRY=1
  IF MY>(SY2+WID-1) THEN SY2=SY2+1:RETRY=1
  IF MX1<SX1 THEN SX1=SX1-1:RETRY=1
  IF MY1<SY1 THEN SY1=SY1-1:RETRY=1
  IF MX1>(SX1+WID-1) THEN SX1=SX1+1:RETRY=1
  IF MY1>(SY1+WID-1) THEN SY1=SY1+1:RETRY=1
 UNTIL RETRY==0

' GFILL 0,0,16*WID-1,16*WID-1,#GRAY
 FOR Y=0 TO BGH-1
  FOR X=0 TO WID-1
   C=MAP%[X+SX2,Y+SY2]
   BGPUT X,Y,C
  NEXT
 NEXT

 X=(SX1*16) AND 511
 Y=(SY1*16) AND 511
 GCOPY BGN,X,Y,X+(WID*16)-1,Y+(WID*16)-1,SW/2,0,1

 LOCATE 20,38
 PRINT "(X=";FORMAT$("%3D",MX);",Y=";FORMAT$("%3D",MY);")";
 LOCATE 0,38
 PRINT " BG=0X";HEX$(MAP%[MX,MY],4);

 SPOFS N1,(MX-SX2)*16,(MY-SY2)*16
 SPOFS N2,(SW/2)+(MX1-SX1)*16,(MY1-SY1)*16

 BT=KEYWAIT()
 IF BT==ESCAPE THEN
  GOSUB @CLRWINDOW
  PRINT "RETURN TO TITLE"
  PRINT "SAVE'";MAPFILE$;"'"
  IF INPUTYN()!=ASC("N") THEN SAVEMAP MAPFILE$
  BREAK
 ENDIF

 IF MODE==0 THEN
  IF BT==UP    THEN DEC MY
  IF BT==DOWN  THEN INC MY
  IF BT==LEFT  THEN DEC MX
  IF BT==RIGHT THEN INC MX
  MX=FIXNUM(MX,0,MAPW-1)
  MY=FIXNUM(MY,0,BGH-1)
 ELSE
  IF BT==UP    THEN DEC MY1
  IF BT==DOWN  THEN INC MY1
  IF BT==LEFT  THEN DEC MX1
  IF BT==RIGHT THEN INC MX1
  MX1=FIXNUM(MX1,0,&HFFFF)
  MY1=FIXNUM(MY1,0,&HFFFF)
 ENDIF

 IF BT==SPACE OR AUTOMA==1 THEN
  IF MODE==1 THEN
   MODE = MODE XOR 1
   GOSUB @EDITMODE
  ENDIF
  C = MX1+(MY1*32)
  MAP%[MX,MY]=C
 ENDIF

 IF BT>=32 THEN SWOFFWAIT

 IF BT==ASC("L") THEN
  AUTOMA=AUTOMA XOR 1
  LOCATE 1,44:PRINT "AUTO:";
  IF AUTOMA THEN PRINT "ON "; ELSE PRINT "OFF";
  CONTINUE
 ENDIF

 IF BT==ASC("S") THEN
  MODE = MODE XOR 1
  GOSUB @EDITMODE
  CONTINUE
 ENDIF

 IF BT==ASC("R") THEN
  C=MAP%[MX,MY]
  TURN = (C >> 12) AND 3
  TURN=(TURN+1) AND 3
  C=(C AND &HCFFF)+(TURN << 12)
  MAP%[MX,MY]=C
  CONTINUE
 ENDIF

 IF BT==ASC("H") THEN
  C=MAP%[MX,MY]
  FLIP = (C >> 14) AND 1
  FLIP = FLIP XOR 1
  C=(C AND &HBFFF)+(FLIP << 14)
  MAP%[MX,MY]=C
  CONTINUE
 ENDIF

 IF BT==ASC("V") THEN
  C=MAP%[MX,MY]
  FLIP = (C >> 15) AND 1
  FLIP = FLIP XOR 1
  C=(C AND &H7FFF)+(FLIP << 15)
  MAP%[MX,MY]=C
  CONTINUE
 ENDIF

 IF BT==ASC("X") THEN
  C=MAP%[MX,MY]
  MX1=C MOD 32
  MY1=FLOOR(C / 32)
  CONTINUE
 ENDIF

WEND
RETURN

'---
@EDITMODE
FOR I=0 TO 1
 X=(SW/2)*I
 Y=0
 IF I==MODE THEN C=#RED ELSE C=#BLACK
 GBOX X-1,Y-1,X+(16*WID),Y+(16*WID),C
NEXT

IF MODE THEN
 SPANIM N1,"I",30,298,0
 SPANIM N2,"I",6,32,6,298,0
ELSE
 SPANIM N1,"I",6,32,6,298,0
 SPANIM N2,"I",30,298,0
ENDIF

GOSUB @CLRWINDOW
PRINT
PRINT " ["+CHR$(57885)+"]["+CHR$(57884)+"]["+CHR$(57886)+"]["+CHR$(57887)+"]";
PRINT "MOVE CURSOR"
PRINT " [SPACE]:PUT / [X]:GET / [S]:SWAP CURSOR"
PRINT " [R]:TURN / [H]:H FLIP / [V]:V FLIP"
PRINT " [ESC]:EXIT & SAVE MAP DATA"
PRINT " [L]:AUTO PUT"

RETURN

'---
@CLRWINDOW
COLOR #WHITE,0
FOR I=0 TO (SH/8)-(WID*2)-1
 LOCATE 0,I+(WID*2):PRINT " "*(SW/8);
NEXT
LOCATE 0,WID*2
RETURN

'---
DEF PRINTSUB X,Y,A$
 IF X<0 THEN
  XSCREEN OUT SW,SH,SA
  X=(SW/16)-(LEN(A$)/2)
 ENDIF
 IF Y<0 THEN
  Y=(SH/8)-1
 ENDIF
 LOCATE X,Y
 PRINT A$;
END

'---
DEF HITANY()
COLOR #BLACK,#WHITE
PRINTSUB -1,-1," HIT ANY KEY "
COLOR #WHITE,0
RET=KEYWAIT()
PRINTSUB -1,-1,"             "
RETURN RET
END
'---
DEF FIXNUM(NUM,MINNUM,MAXNUM)
 IF NUM<MINNUM THEN NUM=MINNUM
 IF NUM>MAXNUM THEN NUM=MAXNUM
 RETURN NUM
END
'---
DEF SET_SAVEDAT MAPNAME$,TIME
 FOR J=0 TO LEN(SAVEDAT)-1
  IF SAVEMAP$[J]==MAPNAME$ THEN BREAK
 NEXT
 IF J<LEN(SAVEDAT) THEN
  SAVEDAT[J]=TIME
 ELSE
  PUSH SAVEMAP$,MAPNAME$
  PUSH SAVEDAT,TIME
 ENDIF
' FOR J=0 TO LEN(SAVEDAT)-1
'  PRINT SAVEMAP$[J],SAVEDAT[J]
' NEXT

END

'---
DEF GET_SAVEDAT(MAPNAME$)
' FOR J=0 TO LEN(SAVEDAT)-1
'  PRINT SAVEMAP$[J],SAVEDAT[J]
' NEXT
 FOR J=0 TO LEN(SAVEDAT)-1
  IF SAVEMAP$[J]==MAPNAME$ THEN BREAK
 NEXT
 IF J<LEN(SAVEDAT) THEN
  RETURN(SAVEDAT[J])
 ELSE
  RETURN(999.99)
 ENDIF
END

'---
DEF INPUTYN()
 PRINT
 COLOR #BLACK,#WHITE
 PRINT " よろしいですか? [Y]/[N] ";
 COLOR #WHITE,0
 WHILE 1
  YN=KEYWAIT()
  IF YN==ASC("Y") THEN PRINT " YES":BREAK
  IF YN==ASC("N") THEN PRINT " NO":BREAK
 WEND
 WAIT 30
 RETURN YN
END

'---
DEF LOADMAP FILENAME$

IF LEFT$(FILENAME$,LEN(PATH$))!=PATH$ THEN FILENAME$=PATH$+FILENAME$
IF RIGHT$(FILENAME$,4)!=".BIN" THEN FILENAME$=FILENAME$+".BIN"
IF CHKFILE(FILENAME$)==0 THEN
 PRINT "ERROR:FILE NOT FOUND ";FILENAME$
 WAIT 60
 RETURN 'NOT FOUND
ENDIF

IF FILENAME$==MAPFILEBAK$ THEN RETURN
MAPFILEBAK$=FILENAME$

'PRINT "LOAD '";FILENAME$;"'"
'WAIT 120

LOAD "RAW:"+FILENAME$,BUF%
PTR=0
FOR Y=0 TO BGH-1
 FOR X=0 TO MAPW-1
  IF PTR>=LEN(BUF%) THEN BREAK
  MAP%[X,Y] = BUF%[PTR]+(BUF%[PTR+1]*&H100)
  INC PTR,2
 NEXT
NEXT

END

'---
DEF SAVEMAP FILENAME$
IF LEFT$(FILENAME$,LEN(PATH$))!=PATH$ THEN FILENAME$=PATH$+FILENAME$
IF RIGHT$(FILENAME$,4)!=".BIN" THEN FILENAME$=FILENAME$+".BIN"
PTR=0
FOR Y=0 TO BGH-1
 FOR X=0 TO MAPW-1
  BUF%[PTR] = MAP%[X,Y] AND &HFF
  INC PTR
  BUF%[PTR] = MAP%[X,Y] >> 8
  INC PTR
 NEXT
NEXT

SAVE "RAW:"+FILENAME$,BUF%
'PRINT "SAVE MAP DATA ";FILENAME$
'WAIT 60
END

'---
@MAPUTIL
SW=640
SH=360
XSCREEN SW,SH,SW/SH
SPCLR

MENU2=0
WHILE 1
 GCLS
 CLS
 PRINT "MAP UTIL"
 GFILL 0,0,SW-1,SH-1,RGB(0,64,0)
 X=64
 Y=64
 RESTORE @STRLIST2
 GOSUB @PUTLIST
 SWOFFWAIT

 N=100
 DN=2339
 SPSET N,DN
 WHILE 1
  X=64-16
  Y=64+8+(MENU2*24)
  SPANIM N,"XY",30,X,Y,30,X+2,Y,0
  SWOFFWAIT
  BT=KEYWAIT()
  IF BT==ENTER THEN BREAK
  IF BT==SPACE THEN BREAK
  IF BT==UP   THEN DEC MENU2
  IF BT==DOWN THEN INC MENU2
  IF BT==ESCAPE THEN MENU2=5:BREAK
  MENU2=FIXNUM(MENU2,0,5)
 WEND
' IF MENU2==0 THEN GOSUB @IMPORT
 IF MENU2==5 THEN BREAK
WEND

RETURN


'---
@INITALLSTAGE

LOCATE 0,40

IF INPUTYN()==ASC("N") THEN RETURN
PRINT
PRINT "ねんのため"
IF INPUTYN()==ASC("N") THEN RETURN

DELETE MAPFILEFULL$
IF RESULT==0 THEN
 PRINT "DELETE FAILED"
 RET=HITANY()
 RETURN
ENDIF
FCOPY CURRENT$+MAPFILE$,MAPFILEFULL$

IF RESULT==0 THEN
 PRINT "COPY FAILED"
 RET=HITANY()
 RETURN
ENDIF
FOR I=0 TO 15
 SAVEDAT[I]=999.99
NEXT

GOSUB @LOADMAP
STG=MAPVIEW("すべてのステ-ジのしょきかがかんりょうしました",1)

RET=HITANY()

RETURN


'---
DEF MAPVIEW(TITLE$,NOCURSOR)
SW=640
SH=360
XSCREEN SW,SH,SW/SH
SPCLR
GCLS
CLS
GFILL 0,0,SW-1,SH-1,RGB(0,64,0)

'LOCATE 1,1
'PRINT TITLE$
PUTSTR 8,8,TITLE$,#WHITE

IF NOCURSOR==0 THEN
 LOCATE 1,40
 PRINT "[UP][DOWN]:か-そるいどう / [SPACE]:けってい / [ESC]:CANCEL"
ENDIF

OFX=64
OFY=32
GBOX OFX-1,OFY-1,OFX+256*2,OFY+15*2*8,#BLUE

FOR I=0 TO 7
 X=OFX-20
 Y=OFY+(I*15*2)+(15-8)
 GPUTCHR X,Y,STR$(I+1),2,2
' PUTSTR2 X,Y,A$,1
NEXT

FOR Y=0 TO 15*8-1
 FOR X=0 TO MAPW-1
  C= MAP%[X,Y] AND 1023
  TX=(C MOD 32)*16
  TY=FLOOR(C/32)*16
  X2=X*2
  Y2=Y*2
  FOR TY1=0 TO 1
   FOR TX1=0 TO 1
    GPAGE 0,BGN
    C=GSPOIT(TX+(TX1*8),TY+(TY1*8))
    GPAGE 0,0
    GPSET OFX+X2+TX1,OFY+Y2+TY1,C
   NEXT
  NEXT
 NEXT
NEXT

IF NOCURSOR THEN RETURN -1

N=100
DN=2339
SPSET N,DN
SPSCALE N,2,2
IDX=0
WHILE 1
 X=OFX-36
 Y=OFY+(15*2*IDX)+15
 SPANIM N,"XY",30,X,Y,30,X+2,Y,0
 SWOFFWAIT
 BT=KEYWAIT()
 IF BT==ESCAPE THEN
  IDX=-1
  BREAK
 ENDIF
 IF BT==ENTER THEN BREAK
 IF BT==SPACE THEN BREAK
 IF BT==UP    THEN DEC IDX
 IF BT==DOWN  THEN INC IDX
 IDX=FIXNUM(IDX,0,7)
WEND
LOCATE 1,40
PRINT " "*80;
RETURN IDX
END
'---
DEF KEYWAIT()
 BT=0
 WHILE BT==0
  VSYNC 1
  STICK STICKID OUT SX,SY
  B=BUTTON()
  IF SX>STICKLV  THEN BT=RIGHT
  IF SX<-STICKLV THEN BT=LEFT
  IF SY<-STICKLV THEN BT=UP
  IF SY>STICKLV  THEN BT=DOWN

  IF B AND (1<<0) THEN BT=UP
  IF B AND (1<<1) THEN BT=DOWN
  IF B AND (1<<2) THEN BT=LEFT
  IF B AND (1<<3) THEN BT=RIGHT

  IF B AND (1<<4) THEN BT=ASC(" ")
  IF B AND (1<<5) THEN BT=ASC("X")
  IF B AND (1<<6) THEN BT=ASC("S")
  IF B AND (1<<7) THEN BT=ASC("L")
  IF B AND (1<<8) THEN BT=ASC("R")
  IF B AND (1<<11) THEN BT=ESCAPE
  NOWKEY$=INKEY$()
  IF NOWKEY$ != "" THEN BT=ASC(NOWKEY$)
 WEND
 WHILE 1
  VSYNC 2
  IF INKEY$=="" THEN BREAK 'KEY BUFF CLEAR
 WEND

 IF BT>=&H60 AND BT<=&H7F THEN BT=BT-&H20
 RETURN BT
END

'---
DEF BGPUT X,Y,C

 DIM GBUF[16*16]
 DIM GBUF2[16*16]

 REV2 = (C >> 15) AND 1
 REV1 = (C >> 14) AND 1
 TURN = (C >> 12) AND 3
 C=C AND 1023
 X=X*16
 Y=Y*16
 GX1=(C MOD 32)*16
 GY1=FLOOR(C/32)*16
 GX2=GX1+15
 GY2=GY1+15
 GSAVE BGN,GX1,GY1,16,16,GBUF
 IF TURN==0 THEN
  COPY GBUF2,GBUF
 ELSEIF TURN==1 THEN
  FOR TY=0 TO 15
   FOR TX=0 TO 15
    GBUF2[(15-TY)+(TX*16)] = GBUF[TX+(TY*16)]
   NEXT
  NEXT
 ELSEIF TURN==2 THEN
  FOR TY=0 TO 15
   FOR TX=0 TO 15
    GBUF2[(15-TX)+((15-TY)*16)] = GBUF[TX+(TY*16)]
   NEXT
  NEXT
 ELSEIF TURN==3 THEN
  FOR TY=0 TO 15
   FOR TX=0 TO 15
    GBUF2[TY+((15-TX)*16)] = GBUF[TX+(TY*16)]
   NEXT
  NEXT
 ENDIF
 IF REV2 THEN
  FOR TX=0 TO 15
   FOR TY=0 TO 7
    SWAP GBUF2[TX+(TY*16)],GBUF2[TX+((15-TY)*16)]
   NEXT
  NEXT
 ENDIF
 IF REV1 THEN
  FOR TY=0 TO 15
   FOR TX=0 TO 7
    SWAP GBUF2[TX+(TY*16)],GBUF2[(15-TX)+(TY*16)]
   NEXT
  NEXT
 ENDIF

 GLOAD X,Y,16,16,GBUF2,1
' GLOAD X,Y,16,16,GBUF2,0

END

'---
DEF BGFILL TX1,TY1,TX2,TY2,C
 FOR X=TX1 TO TX2
  FOR Y=TY1 TO TY2
   BGPUT X,Y,C
  NEXT
 NEXT
END

'---DISTANCE
DEF DISTANCE(DX,DY)
 RETURN SQR((DX*DX)+(DY*DY))
END

'--- ツイセキ
DEF TRACKING(DX,DY,D)
 D1=DEG(ATAN(DY,DX))-90-D
 IF D1> 180 THEN D1=D1-360
 IF D1<-180 THEN D1=D1+360
 RETURN D1
END

'---
DEF BGGET(X,Y)
 TXX=X/16
 TYY=Y/16
 IF TXX<0 OR TXX>=MAPW THEN RETURN 1
 IF TYY<0 OR TYY>=MAPW THEN RETURN 1
 RETURN MAP%[TXX,TYY]
END

'---
DEF ADDOFS X,Y,D,R OUT X2,Y2
 X2=X+COS(RAD(D-90))*R
 Y2=Y+SIN(RAD(D-90))*R
END

'---
DEF PUTSTR X,Y,A$,C
 IF X<0 THEN X=200-(LEN(A$)*8/2)
 RGBREAD C OUT R,G,B
 GPUTCHR X+1,Y,A$,1,1,RGB(R/2,G/2,B/2)
 GPUTCHR X  ,Y,A$,1,1,C
END

'---
DEF PUTSTR2 X,Y,A$,SIZE
 DIM GBUF[16*16]

 IF X<0 THEN X=200-(LEN(A$)*8*SIZE/2)
 FOR PTR=0 TO LEN(A$)-1
  CH=ASC(MID$(A$,PTR,1))
  TX=(CH MOD 32)*16
  TY=FLOOR(CH/32)*16
  FOR TY1=0 TO 15
   FOR TX1=0 TO 15
    GPAGE 0,3
    C=GSPOIT(TX+TX1,TY+TY1)
    GPAGE 0,0
    IF C==0 THEN CONTINUE
    TX2=X+(TX1*SIZE)
    TY2=Y+(TY1*SIZE)
    GFILL TX2,TY2,TX2+SIZE-1,TY2+SIZE-1,C
   NEXT
  NEXT
  X=X+(16*SIZE)
 NEXT
END

'---
DEF ALPHABET(NUM)
 IF NUM>=&H41 AND NUM<=&H5A THEN RETURN TRUE
 RETURN FALSE
END

'---
DEF FILESELECT(DIRFLAG,FILTER$)
COLOR #WHITE,#BLACK
CLS
GCLS
SPCLR

FILTER$=UCASE(FILTER$)

FP=48
FH=20

SELPATH$=PATH$
OFX=0
OFY=0

LOCATE 1,FH+4
PRINT "[UP][DOWN]:か-そるいどう / [SPACE]:けってい / [ESC]:CANCEL"

WHILE 1
 COLOR #BLACK,#BLUE
 FOR I=0 TO FH+1+2
  LOCATE OFX,OFY+I
  PRINT " "*(FP+2)
 NEXT
 COLOR #WHITE,#BLACK
 FOR I=0 TO FH-1
  LOCATE OFX+1,OFY+I+1+2
  PRINT " "*FP
 NEXT
 
 LOCATE OFX+1,OFY+1
 PRINT "DIR:";SELPATH$

 IF FILTER$!="" THEN
  LOCATE OFX+38,OFY+1
  PRINT "FILTER:";FILTER$
 ENDIF
 WHILE LEN(NAME2$)
  R$=POP(NAME2$)
 WEND
 FILES SELPATH$,NAME$
 FOR I=0 TO LEN(NAME$)-1
  T$=NAME$[I]
  IF MID$(T$,1,1)=="@" THEN CONTINUE
  IF DIRFLAG==0 THEN
   IF LEFT$(T$,1)!="+" THEN
    IF FILTER$!="" AND INSTR(UCASE(T$),FILTER$)<0 THEN CONTINUE
   ENDIF
  ELSE
   IF LEFT$(T$,1)!="+" THEN CONTINUE
  ENDIF
  PUSH NAME2$,T$
 NEXT
 UNSHIFT NAME2$,"+.."

 IF DIRFLAG THEN
  PUSH NAME2$,"["+SELPATH$+"にけってい]"
 ENDIF

 IDX=LEN(NAME2$)-1
 IDXOFS=0
 WHILE 1
  FOR I=0 TO LEN(NAME2$)-1
   X=OFX+1
   Y=(I-IDXOFS)
   IF Y<0 THEN CONTINUE
   IF Y>=FH THEN BREAK
   Y=Y+OFY+1+2
   LOCATE X,Y
   T$=" "*FP
   T$=SUBST$(T$,0,LEN(NAME2$[I]),NAME2$[I])
   IF IDX==I THEN COLOR #BLACK,#WHITE ELSE COLOR #WHITE,#BLACK
   PRINT T$;
  NEXT
  COLOR #WHITE,0

  WHILE 1
   STICK STICKID OUT SX,SY
   IF ABS(SX)<STICKLV AND ABS(SY)<STICKLV THEN
    IF BUTTON()==0 THEN BREAK
   ENDIF
   VSYNC
  WEND
  BT=KEYWAIT()
  IF BT==SPACE THEN BREAK
  IF BT==ENTER THEN BREAK
  IF BT==UP    THEN DEC IDX
  IF BT==DOWN  THEN INC IDX
  IF BT==ESCAPE THEN IDX=-1:BREAK

  IDX=FIXNUM(IDX,0,LEN(NAME2$)-1)

  WHILE IDXOFS>IDX
   DEC IDXOFS
  WEND
  WHILE (IDXOFS+FH-1)<IDX
   INC IDXOFS
  WEND
 WEND
 LOCATE 1,FH+4
 PRINT " "*80

 IF IDX<0 THEN SELPATH$="":BREAK

 NB$=MID$(NAME2$[IDX],0,1)
 NA$=MID$(NAME2$[IDX],1,999)
 IF DIRFLAG==0 THEN
  IF NB$!="+" THEN
   IF RIGHT$(SELPATH$,1)!="/" THEN SELPATH$=SELPATH$+"/"
   RETURN (SELPATH$+NA$)
  ENDIF
 ELSE
  IF IDX==LEN(NAME2$)-1 THEN BREAK
 ENDIF

 IF NA$==".." THEN
  TMP=1
  WHILE 1
   IF LEFT$(RIGHT$(SELPATH$,TMP),1)=="/" THEN BREAK
   INC TMP
  WEND
  SELPATH$=LEFT$(SELPATH$,LEN(SELPATH$)-TMP)
  IF LEFT$(SELPATH$,1)!="/" THEN SELPATH$="/"+SELPATH$
 ELSE
  IF RIGHT$(SELPATH$,1)!="/" THEN SELPATH$=SELPATH$+"/"
  SELPATH$=SELPATH$+NA$
 ENDIF
WEND
RETURN SELPATH$
END

'---
DEF LCASE(TMP$)
 FOR TMPI=0 TO LEN(TMP$)-1
  TMPC=ASC(MID$(TMP$,TMPI,1))
  IF TMPC>=&H41 AND TMPC<=&H5A THEN
   TMP$=SUBST$(TMP$,TMPI,1,CHR$(TMPC+&H20))
  ENDIF
 NEXT
 RETURN TMP$
END

'---
DEF UCASE(TMP$)
 FOR TMPI=0 TO LEN(TMP$)-1
  TMPC=ASC(MID$(TMP$,TMPI,1))
  IF TMPC>=&H61 AND TMPC<=&H7A THEN
   TMP$=SUBST$(TMP$,TMPI,1,CHR$(TMPC-&H20))
  ENDIF
 NEXT
 RETURN TMP$
END

